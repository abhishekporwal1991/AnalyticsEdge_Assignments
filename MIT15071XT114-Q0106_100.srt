0
00:00:00,000 --> 00:00:00,500


1
00:00:00,500 --> 00:00:03,940
Picking a good threshold value is often challenging.

2
00:00:03,940 --> 00:00:06,620
A Receiver Operator Characteristic curve,

3
00:00:06,620 --> 00:00:09,320
or ROC curve, can help you decide

4
00:00:09,320 --> 00:00:12,320
which value of the threshold is best.

5
00:00:12,320 --> 00:00:15,000
The ROC curve for our problem is shown

6
00:00:15,000 --> 00:00:16,850
on the right of this slide.

7
00:00:16,850 --> 00:00:20,400
The sensitivity, or true positive rate of the model,

8
00:00:20,400 --> 00:00:22,790
is shown on the y-axis.

9
00:00:22,790 --> 00:00:27,250
And the false positive rate, or 1 minus the specificity,

10
00:00:27,250 --> 00:00:29,820
is given on the x-axis.

11
00:00:29,820 --> 00:00:32,540
The line shows how these two outcome measures

12
00:00:32,540 --> 00:00:35,520
vary with different threshold values.

13
00:00:35,520 --> 00:00:40,340
The ROC curve always starts at the point (0, 0).

14
00:00:40,340 --> 00:00:44,480
This corresponds to a threshold value of 1.

15
00:00:44,480 --> 00:00:46,610
If you have a threshold of 1, you

16
00:00:46,610 --> 00:00:49,430
will not catch any poor care cases,

17
00:00:49,430 --> 00:00:52,070
or have a sensitivity of 0.

18
00:00:52,070 --> 00:00:55,070
But you will correctly label of all the good care

19
00:00:55,070 --> 00:00:59,950
cases, meaning you have a false positive rate of 0.

20
00:00:59,950 --> 00:01:03,810
The ROC curve always ends at the point (1,1),

21
00:01:03,810 --> 00:01:07,520
which corresponds to a threshold value of 0.

22
00:01:07,520 --> 00:01:09,660
If you have a threshold of 0, you'll

23
00:01:09,660 --> 00:01:11,830
catch all of the poor care cases,

24
00:01:11,830 --> 00:01:14,370
or have a sensitivity of 1, but you'll

25
00:01:14,370 --> 00:01:17,540
label all of the good care cases as poor care cases

26
00:01:17,540 --> 00:01:21,970
too, meaning you have a false positive rate of 1.

27
00:01:21,970 --> 00:01:27,420
The threshold decreases as you move from (0,0) to (1,1).

28
00:01:27,420 --> 00:01:33,280
At the point (0, 0.4), or about here,

29
00:01:33,280 --> 00:01:36,120
you're correctly labeling about 40%

30
00:01:36,120 --> 00:01:40,960
of the poor care cases with a very small false positive rate.

31
00:01:40,960 --> 00:01:46,390
On the other hand, at the point (0.6, 0.9),

32
00:01:46,390 --> 00:01:50,570
you're correctly labeling about 90% of the poor care cases,

33
00:01:50,570 --> 00:01:54,310
but have a false positive rate of 60%.

34
00:01:54,310 --> 00:01:58,120
In the middle, around (0.3, 0.8),

35
00:01:58,120 --> 00:02:02,120
you're correctly labeling about 80% of the poor care cases,

36
00:02:02,120 --> 00:02:05,940
with a 30% false positive rate.

37
00:02:05,940 --> 00:02:10,380
The ROC curve captures all thresholds simultaneously.

38
00:02:10,380 --> 00:02:13,830
The higher the threshold, or closer to (0, 0),

39
00:02:13,830 --> 00:02:18,060
the higher the specificity and the lower the sensitivity.

40
00:02:18,060 --> 00:02:21,400
The lower the threshold, or closer to (1,1),

41
00:02:21,400 --> 00:02:26,480
the higher the sensitivity and lower the specificity.

42
00:02:26,480 --> 00:02:29,360
So which threshold value should you pick?

43
00:02:29,360 --> 00:02:31,460
You should select the best threshold

44
00:02:31,460 --> 00:02:33,870
for the trade-off you want to make.

45
00:02:33,870 --> 00:02:37,140
If you're more concerned with having a high specificity

46
00:02:37,140 --> 00:02:40,720
or low false positive rate, pick the threshold

47
00:02:40,720 --> 00:02:43,430
that maximizes the true positive rate

48
00:02:43,430 --> 00:02:46,620
while keeping the false positive rate really low.

49
00:02:46,620 --> 00:02:52,010
A threshold around (0.1, 0.5) on this ROC curve

50
00:02:52,010 --> 00:02:55,070
looks like a good choice in this case.

51
00:02:55,070 --> 00:02:57,380
On the other hand, if you're more concerned

52
00:02:57,380 --> 00:03:01,620
with having a high sensitivity or high true positive rate,

53
00:03:01,620 --> 00:03:04,990
pick a threshold that minimizes the false positive rate

54
00:03:04,990 --> 00:03:08,260
but has a very high true positive rate.

55
00:03:08,260 --> 00:03:13,780
A threshold around (0.3, 0.8) looks

56
00:03:13,780 --> 00:03:17,690
like a good choice in this case.

57
00:03:17,690 --> 00:03:20,330
You can label the threshold values in R

58
00:03:20,330 --> 00:03:22,400
by color-coding the curve.

59
00:03:22,400 --> 00:03:24,880
The legend is shown on the right.

60
00:03:24,880 --> 00:03:28,170
This shows us that-- say we want to pick a threshold

61
00:03:28,170 --> 00:03:30,330
value around here.

62
00:03:30,330 --> 00:03:35,130
This corresponds to between the aqua color and the green color.

63
00:03:35,130 --> 00:03:39,170
Or it looks like about a threshold of 0.3.

64
00:03:39,170 --> 00:03:42,970
Instead, if we wanted to pick a threshold around here,

65
00:03:42,970 --> 00:03:46,160
this looks like the start of the darker blue color,

66
00:03:46,160 --> 00:03:51,080
and looks like it's probably a threshold around 0.2.

67
00:03:51,080 --> 00:03:54,730
We can also add specific threshold labels

68
00:03:54,730 --> 00:03:57,580
to the curve in R. This helps you

69
00:03:57,580 --> 00:04:00,740
see which threshold value you want to use.

70
00:04:00,740 --> 00:04:06,390
Let's go into R and see how to generate these ROC curves.

71
00:04:06,390 --> 00:04:11,470
To generate ROC curves in R, we need to install a new package.

72
00:04:11,470 --> 00:04:14,320
We'll use the same two commands as we did earlier

73
00:04:14,320 --> 00:04:17,390
in the lecture, but this time the name of the package

74
00:04:17,390 --> 00:04:19,350
is ROCR.

75
00:04:19,350 --> 00:04:27,110
So first type install.packages("ROCR"),

76
00:04:27,110 --> 00:04:28,550
and hit Enter.

77
00:04:28,550 --> 00:04:32,270
Since we picked a CRAN mirror already in this R session,

78
00:04:32,270 --> 00:04:34,450
we shouldn't have to pick it again.

79
00:04:34,450 --> 00:04:36,560
You know the package is done installing

80
00:04:36,560 --> 00:04:38,140
when you see the arrow and blinking

81
00:04:38,140 --> 00:04:40,760
cursor in your R console.

82
00:04:40,760 --> 00:04:44,335
Now let's load the package using the library function.

83
00:04:44,335 --> 00:04:47,420


84
00:04:47,420 --> 00:04:50,410
Recall that we made predictions on our training set

85
00:04:50,410 --> 00:04:52,330
and called them predictTrain.

86
00:04:52,330 --> 00:04:56,510
We'll use these predictions to create our ROC curve.

87
00:04:56,510 --> 00:05:00,580
First, we'll call the prediction function of ROCR.

88
00:05:00,580 --> 00:05:05,870
We'll call the output of this function ROCRpred,

89
00:05:05,870 --> 00:05:08,570
and then use the prediction function.

90
00:05:08,570 --> 00:05:11,140
This function takes two arguments.

91
00:05:11,140 --> 00:05:13,080
The first is the predictions we made

92
00:05:13,080 --> 00:05:17,250
with our model, which we called predictTrain.

93
00:05:17,250 --> 00:05:21,830
The second argument is the true outcomes of our data points,

94
00:05:21,830 --> 00:05:23,700
which in our case, is qualityTrain$PoorCare.

95
00:05:23,700 --> 00:05:29,120


96
00:05:29,120 --> 00:05:32,170
Now, we need to use the performance function.

97
00:05:32,170 --> 00:05:33,760
This defines what we'd like to plot

98
00:05:33,760 --> 00:05:37,780
on the x and y-axes of our ROC curve.

99
00:05:37,780 --> 00:05:41,660
We'll call the output of this ROCRperf,

100
00:05:41,660 --> 00:05:44,350
and use the performance function, which

101
00:05:44,350 --> 00:05:49,250
takes as arguments the output of the prediction function,

102
00:05:49,250 --> 00:05:52,250
and then what we want on the x and y-axes.

103
00:05:52,250 --> 00:05:54,790
In this case, it's true positive rate,

104
00:05:54,790 --> 00:05:59,380
or "tpr", and false positive rate, or "fpr".

105
00:05:59,380 --> 00:06:02,880
Now, we just need to plot the output of the performance

106
00:06:02,880 --> 00:06:04,145
function, ROCRperf.

107
00:06:04,145 --> 00:06:06,980


108
00:06:06,980 --> 00:06:10,665
You should see the ROC curve pop up in a new window.

109
00:06:10,665 --> 00:06:15,380
This should look exactly like the one we saw on the slides.

110
00:06:15,380 --> 00:06:19,120
Now, you can add colors by adding one additional argument

111
00:06:19,120 --> 00:06:20,770
to the plot function.

112
00:06:20,770 --> 00:06:26,910
So in your R console, hit the up arrow, and after ROCRperf,

113
00:06:26,910 --> 00:06:31,530
type colorize=TRUE, and hit Enter.

114
00:06:31,530 --> 00:06:33,300
If you go back to your plot window,

115
00:06:33,300 --> 00:06:36,010
you should see the ROC curve with the colors

116
00:06:36,010 --> 00:06:39,490
for the threshold values added.

117
00:06:39,490 --> 00:06:43,850
Now finally, let's add the threshold labels to our plot.

118
00:06:43,850 --> 00:06:47,430
Back in your R console, hit the up arrow again to get the plot

119
00:06:47,430 --> 00:06:51,250
function, and after colorize=TRUE,

120
00:06:51,250 --> 00:06:53,870
we'll add two more arguments.

121
00:06:53,870 --> 00:07:07,550
The first is print.cutoffs.at=seq(0,1,0.1),

122
00:07:07,550 --> 00:07:11,730
which will print the threshold values in increments of 0.1.

123
00:07:11,730 --> 00:07:16,820
If you want finer increments, just decrease the value of 0.1.

124
00:07:16,820 --> 00:07:19,176
And then the final argument is text.adj=c(-0.2,1.7),

125
00:07:19,176 --> 00:07:19,759
and hit enter.

126
00:07:19,759 --> 00:07:32,330


127
00:07:32,330 --> 00:07:35,140
If you go back to your plot window,

128
00:07:35,140 --> 00:07:40,290
you should see the ROC curve with threshold values added.

129
00:07:40,290 --> 00:07:43,530
Using this curve, we can determine which threshold value

130
00:07:43,530 --> 00:07:45,965
we want to use depending on our preferences

131
00:07:45,965 --> 00:07:48,300
as a decision-maker.

132
00:07:48,300 --> 00:07:50,760
In the next video, we'll discuss how

133
00:07:50,760 --> 00:07:53,673
to assess the strength of our model.

134
00:07:53,673 --> 00:07:54,173


